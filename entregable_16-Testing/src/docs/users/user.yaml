paths:
  /api/users/:
    get:
      sumary: Get all users
      tags:
        - User
      responses:
        '200':
          description: Successfully obtained users
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '500':
          description: Internal Server Error

  /api/users/{userId}:
    get:
      sumary: Get user by Id
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            $type: string
          description: User ID autogenerated by the database
      responses:
        '200':
          description: Successfully obtained user
          content:
            aplication/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundUser'
        '500':
          description: Internal Server Error

    put:
      sumary: Edit a user using their ID
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            $type: string
          description: User ID autogenerated by the database
        - name: body
          in: body
          required: true
          schema:
            $type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              age:
                type: number
              password:
                type: string
              role:
                type: string
      responses:
        '200':
          description: Successfully updated user
          content:
            aplication/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundUser'
        '500':
          description: Internal Server Error

    delete:
      summary: Delete a user using their ID
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            $type: string
          description: User ID autogenerated by the database
      responses:
        '200':
          description: User successfully removed
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundUser'
        '500':
          description: Internal Server Error

components:
  schemas:
    unauthorizedUser:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: Unauthorized user

    noAccess:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: The user does not have the necessary permissions

    notFoundUser:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: User not found

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: Error message

    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: MongoDB autogenerated id
        first_name:
          type: string
          description: User name
        last_name:
          type: string
          description: User last name
        email:
          type: string
          description: User email
        age:
          type: number
          description: User age
        password:
          type: string
          description: User password
        role:
          type: string
          enum: ['User', 'Admin']
          description: Role of the user
        cart:
          type: reference
          description: Id Cart of the user
      example:
        _id: ObjectId ("fb7hdsfh4hs47h4")
        first_name: Jon
        last_name: Snow
        email: user@account.com
        age: 18
        password: $2b$13$6sYhCHqCFq78HhMYgskWLuTEtjofMr6o
        role: User
        cart: ObjectId ("xdf91f69h8d92d2dg")