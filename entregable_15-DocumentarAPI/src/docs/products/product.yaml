paths:
  /api/products/:
    get:
      sumary: Get all products
      tags:
        - Product
      responses:
        '200':
          description: Successfully obtained products
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error

    post:
      summary: Create a product
      tags:
        - Product
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $type: Object
            properties:
              title:
                type: string
              price:
                type: number
              stock:
                type: number
              code:
                type: string
              category:
                type: string
              description:
                type: string
              thumbnail:
                type: array
      responses:
        '200':
          description: Successfully obtained product
          content:
            aplication/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundProduct'
        '500':
          description: Internal Server Error

  /api/products/{productID}:
    get:
      sumary: Get product by Id
      tags:
        - Product
      parameters:
        - name: productID
          in: path
          required: true
          schema:
            $type: string
          description: Product ID autogenerated by the database
      responses:
        '200':
          description: Successfully obtained product
          content:
            aplication/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundProduct'
        '500':
          description: Internal Server Error

    put:
      sumary: Edit a product using their ID
      tags:
        - Product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            $type: string
          description: Product ID autogenerated by the database
        - name: body
          in: body
          required: true
          schema:
            $type: object
            properties:
              title:
                type: string
              description:
                type: string
              price:
                type: number
              thumbnail:
                type: array
              code:
                type: string
                unique: true
              stock:
                type: number
              status:
                type: boolean
              category:
                type: string
      responses:
        '200':
          description: Successfully updated product
          content:
            aplication/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundProduct'
        '500':
          description: Internal Server Error

    delete:
      summary: Delete a product using their ID
      tags:
        - Product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            $type: string
          description: Product ID autogenerated by the database
      responses:
        '200':
          description: Product successfully removed
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/unauthorizedUser'
        '403':
          description: The user does not have the necessary permissions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/noAccess'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/notFoundProduct'
        '500':
          description: Internal Server Error

components:
  schemas:
    unauthorizedUser:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: Unauthorized user

    noAccess:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: The user does not have the necessary permissions

    notFoundProduct:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: Product not found

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
      example:
        message: Error message

    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: MongoDB autogenerated id
        title:
          type: string
          description: MongoDB autogenerated id
        description:
          type: string
          description: MongoDB autogenerated id
        price:
          type: number
          description: MongoDB autogenerated id
        thumbnail:
          type: array
          description: MongoDB autogenerated id
        code:
          type: string
          unique: true
          description: MongoDB autogenerated id
        stock:
          type: number
          description: MongoDB autogenerated id
        status:
          type: boolean
          description: MongoDB autogenerated id
        category:
          type: string
          description: MongoDB autogenerated id
      example:
        _id: ObjectId ("fb7hdsfh4hs47h4")
        title: Song of ice and fire
        description: book by george rr martin
        price: 10_000
        thumbnail: []
        code: agrt123456
        stock: 50
        status: true
        category: fantasy